name: Docs

# build the documentation whenever there are new commits on main
on: [push]
   #schedule:
   # - cron: '30 16 * * *'

# security: restrict permissions for CI jobs.
permissions:
  contents: read

jobs:
  requirements:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Check requirements
        uses: ekvanox/pipreqs-action@master
        with:
          PROJECT_PATH: .
          REQUIREMENT_PATH: ./requirements.txt
          COMMIT_MESSAGE: "Updated requirements.txt"
  # Build the documentation and upload the static HTML files as an artifact.
  build:
    runs-on: ubuntu-latest
    needs: requirements
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          allow-prereleases: true

      # ADJUST THIS: install all dependencies (including pdoc)
      - run: pip install pdoc
      # ADJUST THIS: build your documentation into docs/.
      # We use a custom build script for pdoc itself, ideally you just run `pdoc -o docs/ ...` here.
      - run: pdoc *.py -o docs/ --logo "https://saccsf.com/wp-content/uploads/2015/05/saccsf-logo.jpg"

      - name: Install reqirements
        run: pip install -r ./requirements.txt

      - uses: actions/upload-pages-artifact@v3
        with:
          path: docs/

  # Deploy the artifact to GitHub pages.
  # This is a separate job so that only actions/deploy-pages has the necessary permissions.
  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4